package com.example.javacodingtest.programmers.level3;

import java.util.Comparator;
import java.util.PriorityQueue;

/*
 @author ranuinclulus
 @since 2025.02.18
 @link https://school.programmers.co.kr/learn/courses/30/lessons/42898
 @timecomplex
 @performance
 @category
 @note
 */
public class Programmers42898 {
	  static int[][] dp;
    public int solution(int m, int n, int[][] puddles) {
        dp = new int[n][m];     
        for(int[] puddle : puddles) {
            dp[puddle[1] - 1][puddle[0] - 1] = -1;
        }
        
        dp[0][0] = 1;
        for(int i = 1; i < m; i++) {
            if (dp[0][i] == -1 || dp[0][i - 1] == -1) break;
            else dp[0][i] = 1;
        }
        for(int i = 1; i < n; i++) {
            if (dp[i][0] == -1 || dp[i - 1][0] == -1) break;
            else dp[i][0] = 1;
        }
        
        
        for(int i = 1; i < n; i++) {
            for(int j = 1; j < m; j++) {
                if (dp[i][j] == -1) continue;
                
                else if (dp[i - 1][j] == -1) 
                    dp[i][j] = dp[i][j - 1];
                else if (dp[i][j - 1] == -1) 
                    dp[i][j] = dp[i - 1][j];
                else
                    dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % 1000000007;
            }
        }
        
        return dp[n - 1][m - 1];
    }
}
